[{"title":"数位DP思路","url":"/post/da4a5ffe.html","content":"\n\n\n一般用于统计某个范围的数，而这个范围一般都很大，难以直接暴力枚举求解，所以一般将其每位数拆分，一位一位地看。\n\n<!-- more -->\n\n如：判断在`[0,x]`范围中，满足某条件的数的个数\n\n**先做规约：**\n\n* 0特殊判断，然后数位dp判断`[1,x]`\n* 不填前导0，即保证每个数的最高位为正数\n\n**填数过程，遵循以下：**\n\n* 从高位往低位枚举数位\n* 在第`i`位填上了数，则其后面的数位都需填上数，保证数据不重复\n* 保证填入的数组成的数据不大于x\n\n\n\n如：令`x = 324783729`，求`[1,x]`内有多少个数满足其数位上的数字之和为16\n\n1. 先看第一位：\n   * 不填\n   * 填：可以填1, 2, 3\n2. 再看第二位：\n   * 不填\n   * 填：\n     * 第一位没填数：可以填[1,9]任意一个数\n     * 第一位填数了：\n       * 第一位填的1或2：可以填[0,9]任意一个数\n       * 第一位填的3：可以填[0,2]任意一个数\n3. ...\n4. 如处理到第七位：\n   * 不填\n   * 填：\n     * 前面都没有填数：可以填[1,9]任意一个数\n     * 前面填了：\n       * 前面位数没满，即前面填的数没有六位：可以填[0,9]任意一位数\n       * 前面数位满了：\n         * 前面存在一位，其数字小于其对应的数字，即nums[i]：可以填[0,9]任意一位数\n         * 前面所有数字都与对应数字相同：可以填[0,7]任意一位\n\n**规律分析总结：**\n\n第`i`位填数：\n\n* 前面都没有填数：[1,9]\n* 前面没填满或填满了但存在一位所填的数小于x中对应位数的数值：[0,9]\n* 前面所有数字都与x中对应数字相同：[0, nums[i]]\n\n所以，可以引入变量`limit`来判断前面所填数字是否都与x中对应数字相同\n\n则在填入第一个数时，即情况1，前面都没有填数时，对`limit`进行初始化\n\n第二种情况下：limit = 0\n\n第三种情况下： limit = 1\n\n\n\n**limit转移：**\n\n填完第`i`个数字，`limit`怎么转移到第`i + 1`位：\n\n当前limit = 1且填入的数字为nums[i]，则下一位的limt = 1;\n\n否则下一位的limit = 0;\n\n\n\n**特殊情况处理：**\n\n即最高位，第0位的处理\n\n其填入的值的范围：[1, nums[0]]\n\n其limit = 填值 == nums[i] ? 1 : 0\n\n\n\n分析转移方程：使用`dp[i][limit][sum]`表示在前`i`位数字和为sum的数据个数\n\n* 前面都没有填数：[1,9]\n\n  ````java\n  //初始化\n  //填入数字为c,取值为1，9\n  dp[i][0][c] = 1;\n  ````\n\n* 前面没填满或填满了但存在一位所填的数小于x中对应位数的数值：[0,9]\n\n  ````java\n  dp[i][0][cur_sum + c] += dp[i - 1][0][cur_sum];\n  ````\n\n  \n\n* 前面所有数字都与x中对应数字相同：[0, nums[i]]\n\n  ````java\n  c != nums[i]\n  dp[i][0][cur_sum + c] += dp[i - 1][1][cur_sum];\n  else c == nums[i]\n  dp[i][1][cur_sum + c] += dp[i - 1][1][cur_sum];\n  ````\n\n* 最终答案为：\n\n  ````java\n  dp[n - 1][0][sum] + dp[n - 1][1][sum]\n  ````\n\n  ","tags":["数位DP","算法"],"categories":["Learning","Algorithm"]},{"title":"集成JWT实现token验证与注销","url":"/post/0.html","content":"JWT（Java Web Token）定义了一种简洁的，自包含的方法用于通信双方之间以 `JSON` 对象的形式安全的传递信息。因为数字签名的存在，这些信息是可信的，JWT 可以使用 `HMAC` 算法或者是 `RSA` 的公私秘钥对进行签名。\n\n<!-- more -->\n\n## 流程\n\n![图片.png](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309022123414.png)\n\n1. 用户使用账号和面发出 post 请求；\n2. 服务器使用私钥创建一个 jwt；\n3. 服务器返回这个 jwt 给浏览器；\n4. 浏览器将该 jwt 串在请求头中向服务器发送请求；\n5. 服务器验证该 jwt；\n6. 返回响应的资源给浏览器。\n\n\n\n## JWT结构\n\n包含三个部分：\n\n1. Header 头部 (包含了令牌的元数据，并且包含签名和 / 或加密算法的类型)\n2. Payload 负载 (类似于飞机上承载的物品)\n3. Signature 签名 / 签证\n\n以上三段信息用`.`连接在一起，构成了JWT字符串\n\n\n\n### Header\n\n包含两部分信息：\n\n1. token类型\n2. 采用的加密算法\n\n````\n{ \n  \"alg\": \"HS256\",//加密算法，通常直接用HMAC SHA256\n   \"typ\": \"JWT\" //类型\n}\n````\n\n\n\n### Payload\n\n载荷就是存放有效信息的地方\n\n有效信息包含：\n\n1. 标准中注册的声明\n2. 公共的声明\n3. 私有的声明\n\n\n\n### 1. 标准中注册的声明\n\n建议但不强制使用\n\n* iss: jwt 签发者\n* sub: 面向的用户 (jwt 所面向的用户)\n* aud: 接收 jwt 的一方\n* exp: 过期时间戳 (jwt 的过期时间，这个过期时间必须要大于签发时间)\n* nbf: 定义在什么时间之前，该 jwt 都是不可用的.\n* iat: jwt 的签发时间\n* jti: jwt 的唯一身份标识，主要用来作为一次性 token, 从而回避重放攻击。\n\n\n\n#### 2. 公共的声明\n\n可以添加任何信息。一般添加用户的相关信息或其他业务需要的必要信息。\n\n不建议添加敏感信息，因为该部分在客户端可解密。\n\n\n\n#### 3. 私有的声明\n\n为提供者和消费者所共同定义的声明。\n\n不建议存放敏感信息，因为base64是对称解密的，即该部分信息可以归类为明文信息\n\n\n\n### Signature\n\n签证信息，包含以下三部分：\n\n1. header(base64后)\n2. payload(base64后)\n3. seceret\n\n需要 base64 加密后的 header 和 base64 加密后的 payload 使用`. `连接组成的字符串，然后通过 header 中声明的加密方式进行加盐 secret 组合加密，然后就构成了 jwt 的第三部分。\n密钥 secret 是保存在服务端的，服务端会根据这个密钥进行生成 token 和进行验证，所以需要保护好。\n\n\n\n## Springboot和jwt集成\n\n1. 引入jwt依赖\n\n   ````xml\n   <dependency>\n         <groupId>com.auth0</groupId>\n         <artifactId>java-jwt</artifactId>\n         <version>3.4.0</version>\n   </dependency>\n   ````\n\n2. 自定义注解\n\n   如需登录才能进行操作的注解\n\n   ````java\n   @Target({ElementType.METHOD, ElementType.TYPE})\n   @Retention(RetentionPolicy.RUNTIME)\n   public @interface UserLoginToken {\n       //是否进行校验\n       boolean required() default true;\n   }\n   ````\n\n   `@Tagert`：注解的作用目标\n\n   @Target(ElementType.TYPE)—— 接口、类、枚举、注解\n   @Target(ElementType.FIELD)—— 字段、枚举的常量\n   @Target(ElementType.METHOD)—— 方法\n   @Target(ElementType.PARAMETER)—— 方法参数\n   @Target(ElementType.CONSTRUCTOR) —— 构造函数\n   @Target(ElementType.LOCAL_VARIABLE)—— 局部变量\n   @Target(ElementType.ANNOTATION_TYPE)—— 注解\n   @Target(ElementType.PACKAGE)—— 包\n\n   \n\n   `@Retention`：注解的保留位置\n\n   `RetentionPolicy.SOURCE`：只在源代码级别保留，编译时自动忽略\n\n   `RetentionPolicy.CLASS`：编译时被保留，是默认的保留策略。在class文件中存在，但JWM会忽略，运行时无法获得。\n\n   `RetentionPolicy.RUNTIME`：被JVM保留，在运行时可被JVM或其他使用反射机制的代码读取使用。\n\n   \n\n   `@Document`：该注解将被包含在javadoc中\n\n   \n\n   `@Inherited`：子类可以继承父类中的该注解","tags":["studying","springboot","jwt","token"],"categories":["Coding","Mo1isting"]},{"title":"遇到的问题及思路","url":"/post/0.html","content":"\n\n\n\n一些开发过程中的问题rec.\n\n<!-- more -->\n\n\n\n1. maven直接引入jdbc失败，搜索后发现时maven3后oracle不支持直接引入了，手动下载jdbc引入，使用如下命令：\n\n   ````shell\n   mvn install:install-file -Dfile=D:\\Code\\oracle\\ojdbc11.jar -DgroupId=com.oracle -DartifactId=ojdbc11 -Dversion=11 -Dpackaging=jar -DgeneratePom=true\n   ````\n\n   但是报错误：\n\n   ````\n   [ERROR] Unknown lifecycle phase \".oracle\". You must specify a valid lifecycle phase or a goal in the format <plugin-pre\n   fix>:<goal> or <plugin-group-id>:<plugin-artifact-id>[:<plugin-version>]:<goal>. \n   ````\n\n   查询后发现为使用powershell的问题，应该是powershell对`.`的判定规则引起，切换到cmd后正常\n\n   参考：https://blog.csdn.net/without_mercy/article/details/81474648\n\n2. https://jasonkayzk.github.io/2020/01/25/%E5%85%B3%E4%BA%8EMybatis-plus%E8%B0%83%E7%94%A8baseMapper%E6%8A%A5%E9%94%99Invalid-bound-statement%E7%9A%84%E8%A7%A3%E5%86%B3/\n\n   以及记得关闭下划线驼峰转换：\n\n   ````\n   mybatis:\n     configuration:\n       map-underscore-to-camel-case: false #下划线转驼峰\n   ````\n\n   \n\n   \n\n","tags":["问题","Mo1isting"],"categories":["Coding","Mo1isting"]},{"title":"It should be in Theater - 其实是剧推荐","url":"/post/94b1f2b2.html","content":"\n\n\n随着年纪的增加，对不同音乐的喜好程度有了很大变化。\n\n就该在剧院！很主观的剧目推荐。\n\n大致有：\n\n* 音乐剧\n* 话剧\n* 舞剧\n\n <!-- more -->\n\n# 音乐剧\n\n## Hamilton\n\n![image-20230928164639070](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281646018.png)\n\n目前仍是我的最爱之一，很难想象为什么会有LMM这么天才的人。\n\n舞美、剧情、演唱都非常非常好看，在我这儿属于不看非常亏的剧。希望有天能看到现场。\n\n喜爱程度：⭐⭐⭐⭐⭐\n\n目前可以看[Disney的官摄版本](https://tv.apple.com/movie/hamilton/umc.cmc.54rv4esv3qomlthreamvbd34v?at=11l4BH&itscg=30200&itsct=tv_box_link)\n\n\n\n##Rent\n\n![RENT - O MUSICAL](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281632766.jpeg)\n\n再放一张很喜欢的：\n\n![rent](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281636284.png)\n\n其实某种意义上这算是我的第一步音乐剧。诚挚、动人，在混乱的世界怎么才能pay自己的rent，最喜欢的是那句\n\n**Everything is Rent**\n\n很触动内心。而且这部剧的歌，都好好听，每一首都是精品。\n\n喜爱程度：⭐⭐⭐⭐⭐\n\n推荐查看[2008Broadway Film](https://www.imdb.com/title/tt1273675/)版\n\n\n\n## SIX\n\n![SIX | Broadway in Spokane](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281644058.jpeg)\n\n该怎么形容？真的太太太太好看了，不好描述所以推荐每个人都去看一遍。\n\n喜爱程度：⭐⭐⭐⭐⭐\n\n目前无官摄，最近在韩巡，希望有一天能看到现场！\n\n\n\n## Les Misérables\n\n![Les Misérables – Hennepin Theatre Trust](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281649714.jpeg)\n\n谁能不看？\n\n非常非常喜欢10th的音乐会，只能说看了的都不会不喜欢。\n\n喜爱程度：⭐⭐⭐⭐⭐\n\n23年法语版音乐会会到国内巡，英语的没听说。\n\n推荐看[10th的音乐会官摄](https://www.imdb.com/title/tt11918512/)。25th的也还行。\n\n\n\n## SpringAwakening\n\n![image-20230928165811680](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281658375.png)\n\n如果你也喜欢死亡诗社，那你肯定会喜欢这部剧。\n\n值得所有人看。\n\n喜爱程度：⭐⭐⭐⭐⭐\n\n目前有很多版本，都可以看。\n\n\n\n## Dear Evan Hansen\n\n![Dear Evan Hansen – Official Website of the Morris Performing Arts Center](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281640618.jpeg)\n\n其实这个故事并不算很触动我，但是ben的演绎我觉得太适合了，第一次见他是在Pitch Perfect1，当时我觉得他就很适合这类角色，看了evan国货发现我曾经的觉得太对了，很迷茫很恐怯，演得太好了，歌也非常非常好听！\n\n喜爱程度：⭐⭐⭐⭐\n\n目前无官摄。\n\n\n\n## Anastasia\n\n![Anastasia | The Musical - Video Dailymotion](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281654838.jpeg)\n\n感觉是一部很冷门的剧，但是舞美非常妙非常好看，切换也很好看。\n\n有官摄可看。\n\n喜爱程度：⭐⭐⭐⭐\n\n\n\n## Mozart!\n\n![Mozart! Das Musical - Vorstellungen & Tickets](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281700457.jpeg)\n\n我的人生挚爱剧之一。\n\n非常非常非常喜欢。\n\n希望有一天能巡。\n\n喜爱程度：⭐⭐⭐⭐⭐\n\n推荐看2015官摄版，同时非常推荐Thomas Hohler2019上海巡演版\n\n\n\n## Elisabeth\n\n![Elisabeth\" in Wien (2004) | Seite 2 von 5 | Mucke und mehr](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281707893.jpeg)\n\n也是人生剧之一，看的maya和麻袋版，serkan太帅了，唱得太好听了。\n\n表哥版据说也很不错。\n\n喜爱程度：⭐⭐⭐⭐⭐\n\n\n\n\n\n## Notre-Dame de Paris\n\n![Notre Dame de Paris (Musical)](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281704637.jpeg)\n\n非常非常完美的一部剧\n\n喜爱程度：⭐⭐⭐⭐⭐\n\n有官摄可看，虽然很糊\n\n\n\n# Mozart, L'Opéra Rock\n\n![image-20230928171004655](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281710900.png)\n\n因为太喜欢德扎了所以我觉得一般，不过歌很好听。\n\n喜爱程度：⭐⭐⭐⭐\n\n有官摄可看。\n\n\n\n## 粉丝来信\n\n![聚焦1940年代上海文学青年，音乐剧《粉丝来信》来了_郑微岚_徐均_中文版](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281712727.jpeg)\n\n我真的挺喜欢的，歌也挺好听的，5.20午场演得也很不错。\n\n喜爱程度：⭐⭐⭐⭐\n\n目前还在巡，会再去刷。\n\n可以看韩版官摄。\n\n\n\n\n\n# 话剧\n\n## 蒋公的面子\n\n![喜剧《蒋公的面子》讲了一个什么故事？-黄河票务网](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281714186.jpeg)\n\n很好看，整体节奏紧凑，语言幽默，非常有意思。\n\n目前在南京驻演，全国偶尔巡演。\n\n喜爱程度：⭐⭐⭐⭐⭐\n\n\n\n## 惊梦\n\n![img](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281718618.jpeg)\n\n非常好看，整体剧情，演绎，节奏都很舒服，适当的幽默，全程只使用天地麦，非常好看，总让我想到莫言的《檀香刑》。看一场少一场，碰到巡演一定冲冲冲！\n\n喜爱程度：⭐⭐⭐⭐⭐\n\n\n\n# 舞剧\n\n## 红楼梦\n\n![原创民族舞剧《红楼梦》于江苏大剧院成功首演](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281725042.jpeg%253Bcharset%253DUTF-8)\n\n太太太喜欢了，已经看过两次了，想再看无数次！\n\n一直在巡，票很难买。\n\n喜欢程度：⭐⭐⭐⭐⭐\n\n\n\n## 永不消逝的电波\n\n![img](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281726845.jpeg)\n\n好喜欢，剧情流的。今年末会在南京演，期待期待。\n\n喜爱程度：⭐⭐⭐⭐⭐\n\n\n\n## 只此青绿\n\n![舞蹈诗剧：只此青绿– 舞绘千里江山图](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202309281728805.jpeg)\n\n意识流，很美。年末也会巡到南京嘿嘿。\n\n喜爱程度：⭐⭐⭐⭐⭐\n\n\n\n\n\n","tags":["thoughts","Music","theater","I'm alive"],"categories":["Let's think","Life"]},{"title":"2022.8-2022.9暑期学校总结","url":"/post/6ba0d0e7.html","content":"\n  很难形容的一个月，确实增长了不少见识。\n\n<!-- more -->\n\n如果非得让我列一下时间线，那应该是\n\n1. 暑期初始，校企发布让大家选项目的要求以及多次@全体成员\n  * 心情：无语+心烦\n2. 填完项目后，暑期中后段，发布分组情况，要求大家在暑假期间完成训前作业\n\n   * 心情：得知分组为我+两个隔壁班同学+一个狂重修哥，心情复杂，非常不道德地去查了隔壁俩同学的绩点，了解基本情况后晴天霹雳，当时和朋友聊天出现得最多的词语是“麻麻的”。本来准备我当组长好了，结果隔壁有个同学拉群了，询问大家当组长的意愿，不知道怎么脑子抽了说自己也不想当组长，隔壁某同学遂成为组长，胡乱分工开始训前作业。\n   * 当时分完工还和朋友说可能没有想得那么差，如今看来当时已经铺好了烂掉的基石。\n   * 得知分组后第一时间开始学习前端相关知识。说来其实也很好笑，本来未放假时的计划就是学习前端知识，结果回家了一点儿没实施，但是分组结果一出来就马上去学了，果然是有压迫才有动力.....\n\n3. 临近开学，合训前作业\n\n   * 以为自己在来学校前一天正式写完就是最慢了，结果貌似除了我没人写完，合模块也相当于没有合，只是随意拼凑。\n   * 再次对分组感到无语+心灰意冷\n\n4. 正式开学开始实训，线上写文档\n\n   * 反感企业老师只是装模做样而讲不出有价值的知识点；反感小组没有交流或是交流后没有有用的结果；反感每次分工都是按照demo的页数进行分工，没有根据自己的项目进行；反感每次分工都是“先到先得”，没有相对合理地安排大家的工作。\n   * 开始后悔自己为什么不当组长。\n\n5. 三天过后线下写文档\n\n   * 天气真的好热，到教室也是大家开腾讯会议上课。不明白为什么要这样，开始无止境的抱怨，生气，写文档依然重复之前的模式，甚至出现了我因为完成了自己的任务而必须开始接受未分配的新任务，没完成的不用因为他们“任务重”.....\n   * 第一天线下就碰到了勤工俭学的老师，于是收放排插的任务自然而然地被交给了我和yc同学，真的很累，也有一点尴尬，开始自己生闷气\n\n6. 文档写完开始编码阶段\n\n   * 再次抱怨老师没有有用的知识输出\n   * 分工变成了前后端分开，相对合理\n   * 组内分工结束三天后才和前端某同学商量页面分工，初步分了一下，开始写\n   * 中途逃课被逮住一次\n\n7. 前端我的部分完成\n\n   * 基本写完我的部分，老师第一次检查进度，发现后端除了基本的增删改查几乎没写，联系另一个前端同学O一直不回消息\n\n   * 尝试再次联系另一个前端同学O，不回\n\n   * 和组长L商量那个同学的情况，组长说把这部分工作分给了另外一个后端同学Z，他一个人写后端就行\n\n   * 与同学Z联系问他进度，他说还卡在登录注册.....\n\n   * 鉴于后端写得有些乱七八糟以及同学Z不会后端，于是说前端全部给我写好了，他们俩把后端写好就行\n\n   * 三天后同学O终于回消息说自己这几天发病了精神状态不太对，问啥时候截止，此时他的部分我已写一大半\n\n   * 无法判别是否真的生病，只能和朋友说“如果是真的我希望是假的，如果是假的我希望是真的”，理解生病但是不理解为什么不和大家说进度\n\n   * 和同学O说他不用写了我写就行，如下\n\n     <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101459911.png\" alt=\"image-20220910145932831\" style=\"zoom:50%;\" />\n\n   * 第三周周末前端几乎完成，与后端整合开始\n\n8. 开始与后端整合\n\n   * 几乎是我一个人的工作\n\n   * 后端非常多接口都没写\n\n   * 中途我去做了根管，，\n\n   * 开始整合\n\n     1. 后端没跨域处理\n\n        <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101502103.png\" alt=\"image-20220910150225047\" style=\"zoom:50%;\" />\n\n     2. 注册传不进参数，同学L说swagger测试没问题，我用的前端以及postman都有问题，换成swagger问题依然存在，遂以为是我电脑环境的问题，后来发现是代码的问题......\n\n        <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101504764.png\" alt=\"image-20220910150448708\" style=\"zoom:50%;\" />\n\n        <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101505485.png\" alt=\"image-20220910150533359\" style=\"zoom: 40%;\" />\n\n     3. 一个人合前后端没人帮忙的情况下多次催进度，，\n\n        <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101508483.png\" alt=\"image-20220910150811416\" style=\"zoom:50%;\" />\n\n     4. 后端改动后不列出具体改动哪里，一个所有的打包文件发过来。。\n\n        <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101508583.png\" alt=\"image-20220910150839534\" style=\"zoom:50%;\" />\n\n     5. 后端需改动让前端改一下\n\n        <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101510316.png\" alt=\"image-20220910151005239\" style=\"zoom:50%;\" />\n\n     6. 这个尼玛就是我的心情\n\n        <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101510737.png\" alt=\"image-20220910151032690\" style=\"zoom:50%;\" />\n\n     7. 第二次进度组长上讲台给老师展示\n\n        <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101511170.png\" alt=\"image-20220910151123121\" style=\"zoom:50%;\" />\n\n     8. 数据库表的连接删除有问题，哈哈非说swagger测试了没问题\n\n        <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101512189.png\" alt=\"image-20220910151236120\" style=\"zoom:50%;\" />\n\n        <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101515178.png\" alt=\"image-202209101515178\" style=\"zoom:50%;\" />\n\n     9. 不知道说什么，，，\n\n        <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101513046.png\" alt=\"image-20220910151316006\" style=\"zoom:50%;\" />\n\n        <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101513947.png\" alt=\"image-20220910151337864\" style=\"zoom:50%;\" />\n\n     10. 给出问题所在还是不同意，以为他理解了其实没理解\n\n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101519021.png\" alt=\"image-20220910151924924\" style=\"zoom:50%;\" />\n\n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101519841.png\" alt=\"image-20220910151924924\" style=\"zoom:50%;\" />\n\n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101521802.png\" alt=\"image-20220910152137721\" style=\"zoom:50%;\" />\n\n     11. 懂了过后说方案结果不改，我直接震惊了\n\n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101522502.png\" alt=\"image-20220910152235445\" style=\"zoom:50%;\" />\n\n     12. 接口“写了”不好测哈哈\n\n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101523191.png\" alt=\"image-20220910152307130\" style=\"zoom:50%;\" />\n\n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101523313.png\" alt=\"image-20220910152307130\" style=\"zoom:50%;\" />\n\n     13. 提出解决方案后问我怎么做，\n     \n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101525941.png\" alt=\"image-20220910152535868\" style=\"zoom:50%;\" />\n     \n     14. 接口传参有问题，说了不改，，\n     \n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101526899.png\" alt=\"image-20220910152632813\" style=\"zoom:50%;\" />\n     \n     15. 分页接口写得不对还非要写分页，，\n     \n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101527128.png\" alt=\"image-20220910152732057\" style=\"zoom:50%;\" />\n     \n     16. 答辩前一天还在大改，，\n     \n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101528552.png\" alt=\"image-20220910152822473\" style=\"zoom:50%;\" />\n     \n     17. 在我明确说过看板娘之类的元素不好看的情况下，在答辩前还是改了我的前端加上去了哈哈\n     \n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101529406.png\" alt=\"image-20220910152915364\" style=\"zoom:50%;\" />\n     \n     18. 答辩当天说电脑不行要用我的电脑\n     \n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101530799.png\" alt=\"image-20220910153018737\" style=\"zoom:50%;\" />\n     \n         他不肯呐哈哈\n     \n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101530970.png\" alt=\"image-20220910153045924\" style=\"zoom:50%;\" />\n     \n     19. 上午答辩结束后已经去食堂吃饭忽然给我说\n     \n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101531512.png\" alt=\"image-20220910153156461\" style=\"zoom:50%;\" />\n     \n     20. 觉得自己很幽默吗？\n     \n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101532546.png\" alt=\"image-20220910153229506\" style=\"zoom:50%;\" />\n     \n     21. 我说1点过去非得12：40，说要录视频，最后精彩的是什么朋友们，2点开始下午答辩，1：57视频还没录，视频也是我录的哈哈哈麻麻的\n     \n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101533275.png\" alt=\"image-20220910153352211\" style=\"zoom:50%;\" />\n     \n     22. 让我12：40过去，12：40教室没人，说没找到空的教室，可是我在的教室就是空的哈哈\n     \n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101534774.png\" alt=\"image-20220910153450721\" style=\"zoom:50%;\" />\n     \n     23. 哈哈结果就是改了我的前端\n     \n         <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202209101535611.png\" alt=\"image-20220910153536577\" style=\"zoom:50%;\" />\n\n9. 答辩过程\n\n   * 讲得稀烂，演示稀烂，改了我的前端这件事我是不可能能原谅的\n\n10. 答辩结束\n\n   * 希望这辈子都不会碰到，希望这辈子都不会再碰到这么烂的组。\n   * 结束后飞速退掉了两个小组群\n\n\n\n**写在最后：**\n\n并不是不能接受和成绩不好的同学组队，而是接受不了无法沟通以及摆烂的组员，他们可能挂科无所谓，可是我不能接受。舍友说得很对，烂的应该在一个队，这样大家的情绪都是一样的。而不是像我们组，只有我一个人在地狱。真是你觉得负重前行是因为有人在替你岁月静好。\n\n希望再也不会遇到烂组员！\n\n","tags":["thoughts","studying"],"categories":["Let's think","Life"]},{"title":"前端学习笔记","url":"/post/91ce7628.html","content":"\n## Before Reading\n\n1. 请点击左下方小框打开目录配合阅读\n2. 只有基础与大致的内容\n3. 大部分参考来自<a href=\"https://www.runoob.com\">菜鸟教程</a>\n4. 点击可见<a href=\"https://www.runoob.com/cssref/css-colornames.html\">颜色名称表</a>\n\n\n\n***\n\n\n\n[TOC]\n\n<!-- more -->\n\n## HTML\n\nHTML(Hypertext Makeup Language)，即超文本**标记**语言，主要负责网页内容的展示，大小写不敏感。\n\n### 标记\n\n   一般以<标签名>...</标签名>的形式成对出现，自结束标签无需结束符\n\n#### 常见的标签\n\n   * 文档声明[html5]：<!doctype html>放在顶端\n\n   * 网页根标签：`<html>...</html>`\n\n   * `<head>...</head>非用户可见，一般为告诉浏览器属性`\n\n     * head中的标题/浏览器头部标题：`<title>text</title>`\n\n     * HTML文档元数据：`<meta>`,可说明编码类型，描述(discription)，作者(author)等等\n\n       `<meta charset=\"utf-8\">`\n\n       `<meta name=\"author\" content=\"moo1\">`\n\n     * 链接：`<link>`，定义文档与外部资源的关系，空元素，只包含属性，常用于来链接样式表。\n\n       * 属性：\n\n         1. herf：被链接文档的位置\n         2. rel：当前文档与被链接文档之间的关系，<mark>必须</mark>\n         3. type：type 属性规定被链接文档/资源的 MIME 类型。只有当设置了 href 属性时，才能使用该属性。`<link>` 标签常用的 MIME 类型是 \"text/css\"，它规定样式表。\n\n         <a href=\"https://www.runoob.com/tags/tag-link.html\">更多与link属性相关可点击查看。</a>\n\n         \n\n* `<body>...</body>`用户可见，具体内容\n  \n* 标题：`<hn>text</hn>`,n=1~6\n  \n* 段落：`<p>text</p>`\n  \n* 超链接：`<a>text</a>`，一般与herf属性一起使用\n  \n  <a href=\"https://mooyi.xyz\">welcome to mooyi's channel!</a>\n  \n* 换行：`<br>`\n  \n* 粗体：`<b>text</b>`\n  \n     **Atten**:`<strong>text</strong>`也有加粗的效果，但是还表示重要呈现\n   \n* 按钮：`<button>text</button>`\n  \n  <button>text</button>\n  \n* 文档中的节：`<div>text</div>`\n  \n* 文本中的节：`<span>text</span>`\n  \n* 斜体：`<i>text</i>`\n  \n     **Atten**:`<em>text</em>`也有斜体效果，同样表示重要呈现\n   \n* 输入：`<input>`\n  \n* 高亮：`<mark>text</mark>`\n  \n  <mark>text</mark>\n  \n* 下标：`1<sub>text</sub>`\n  \n  1<sub>text</sub>\n  \n* 上标：`1<sup>text</sup>`\n  \n  1<sup>text</sup>\n  \n* 删除线：`<del>text</del>`\n  \n  <del>text</del>\n  \n* 插入/下划线：`<ins>text</ins>`\n  \n  <ins>text</ins>\n\n<a href=\" https://www.runoob.com/tags/ref-byfunc.html\">更多标签可点击查看。</a>\n\n\n\n### 标签属性\n\n  在开始标签中设置，属性是键值对结构(\"key\"=\"value\")\n\n#### 常见属性\n\n   * id(唯一)\n\n   * style:指定行内样式，多个样式以;分隔\n\n     `style=\"color:red;text-align:center\"`\n\n     <p style=\"color:red;text-align:center\">\n         style-showing.\n     </p>\n\n   * title：额外信息/工具条\n\n     `<p><ins title=\"格外信息\">move</ins> on this</p>`\n\n     <p><ins title=\"格外信息\">move</ins> on this</p>\n\n<a href=\"https://www.runoob.com/tags/ref-standardattributes.html\">更多属性可点击查看。</a>\n\n\n\n### 注释\n\n`<!--this is unshown.-->`\n\n\n\n### HTML事件\n\n事件可以触发浏览器行为，与JS联合使用。\n\n表示：`event=\"script()\"`\n\n#### 窗口事件属性(Window Event Attributes)\n\n窗口触发，适用于`<body>`标签\n\n* onresize：调整窗口大小时运行脚本\n\n  `<body onresize=\"Function()\">`\n\n* 文档触发，窗口失焦...\n\n\n\n#### 表单事件(Form Events)\n\n表单中触发，HTML元素需在form表单内。\n\n\n\n#### 键盘事件(Mouse Events)\n\n* onkeydown：按下键盘\n* onkeypress：按下并松开\n* onkeyup：松开按键\n\n\n\n#### 鼠标事件(Mouse Events)\n\n* onclick：单击\n* ondblclick：双击\n* ondrag：拖动元素\n\n...\n\n\n\n#### 多媒体事件(Media Events)\n\n通过视频（videos），图像（images）或者音频（audio） 触发该事件，多应用于 HTML 媒体元素比如 `<audio>, <embed>, <img>, <object>, 和<video>`:\n\n\n\n#### 其他事件\n\n\n\n<a href=\"https://www.runoob.com/tags/ref-eventattributes.html\">更多事件可点击查看。</a>\n\n\n\n其余HTML相关内容可参考https://www.runoob.com/html/html-tutorial.html\n\n\n\n***\n\n\n\n## CSS\n\nCSS(Cascading Style Sheets)，主要负责网页布局，描述HTML/XML的呈现，即其如何被渲染。\n\n```css\np{\n\tfont-size: 20px;\n\tcolor:red;\n}\n```\n\n&lt;<span style='background-color:red'>p</span>&gt;text&lt;/p&gt;\n\np:选择器\n\nfont-size/color:属性，冒号后为其值\n\n大括号括着的为声明，声明以;结束\n\n\n\n### 选择器\n\n#### id选择器\n\n  以#定义，不以数字开头(避免在Mozilla/Firefox不起作用)\n\n  eg.: <mark>**#test**</mark>{\n\n  ​\ttext-align:center;\n\n  ​\tcolor:red;\n\n  }\n\n  &lt;p <mark>**id=\"test\"**</mark>&gt;text&lt;/p&gt;\n\n#### class选择器\n\n  以.显示，多个用空格区分，类名第一个字符非数字\n\n  eg.:\n\n  <span style=\"background-color:#7FFFD4\">**.center**</span>{\n\n  text-align:center;\n\n  }\n\n  &lt;p <span style=\"background-color:#7FFFD4\">**class=\"center\"**</span>&gt;text&lt;/p&gt;\n\n注释：`/*text*/`\n\n\n\n### 组合选择符\n\n#### 后代选择器\n\n选取某元素的后代元素，以空格` ` 分离。\n\n```html\n<style>\ndiv p\n{\n\tbackground-color:yellow;\n}\n</style>\n\n<div>\n<p>段落 1。 在 div 中。</p>\n<p>段落 2。 在 div 中。</p>\n</div>\n\n<p>段落 3。不在 div 中。</p>\n<p>段落 4。不在 div 中。</p>\n```\n\n<img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202207311311428.png\" alt=\"image-20220731131103323\" style=\"zoom:67%;\" />\n\n#### 子元素选择器\n\n只能选择作为某元素<span style=\"background-color:#E0FFFF\">直接/一级子元素的元素</span>，大于符号`>`分隔。\n\n\n```html\n<style>\ndiv>p\n{\n\tbackground-color:yellow;\n}\n</style>\n\n<h1>Welcome to My Homepage</h1>\n<div>\n\t<h2>My name is Donald</h2>\n\t<p>I live in Duckburg.</p>//highlight\n</div>\n\n<div>\n\t<span><p>I will not be styled.</p></span>//no highlight with the first child \"span\"\n    <p><span>I will be styled.</span></p>//highlight because \"p\" is the first child\n</div>\n\n<p>My best friend is Mickey.</p>\n```\n\n<img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202207311322609.png\" alt=\"image-20220731132236565\" style=\"zoom: 50%;\" />\n\n#### 相邻兄弟选择器\n\n选择<span style=\"background-color:#E0FFFF\">**紧接**在另一元素后的元素，且二者有相同父元素</span>，用`+`分隔。\n\n```html\n<style>\ndiv+p\n{\n\tbackground-color:yellow;\n}\n</style>\n\n<div>\n<h2>DIV 内部标题</h2>\n<p>DIV 内部段落。</p>\n</div>\n\n<p>DIV 之后的第一个 P 元素。</p>//adjacent to the \"div\"\n\n<p>DIV 之后的第二个 P 元素。</p>\n```\n\n<img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202207311326422.png\" alt=\"image-20220731132642385\" style=\"zoom:67%;\" />\n\n\n\n#### 后续兄弟元素\n\n后续兄弟选择器选取<span style=\"background-color:#E0FFFF\">所有指定元素**之后**的相邻兄弟元素</span>。用`~`隔开。\n\n```html\n<style>\ndiv~p\n{\n\tbackground-color:yellow;\n}\n</style>\n\n<p>之前段落，不会添加背景颜色。</p>\n<div>\n<p>段落 1。 在 div 中。</p>\n<p>段落 2。 在 div 中。</p>\n</div>\n\n<p>段落 3。不在 div 中。</p>\n<p>段落 4。不在 div 中。</p>\n```\n\n<img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202207311331016.png\" alt=\"image-20220731133141976\" style=\"zoom: 67%;\" />\n\n\n\n\n\n\n### 插入样式表\n\n#### 外部样式表(external style sheet)\n\n  一般用于*同一样式需用于很多页面*，通过mystyle.css文件改变站点整体样式【页面使用`<link>`标签链接到样式表，该标签位于文档头部`<head>`中】\n\n  `<link rel=\"stylesheet\" href=\"mystyle.css\">`\n\n#### 内部样式表(internal style sheet)\n\n  一般用于*单个文件*，利用`<style>`标签在头部文件内部定义。\n\n  <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202207291021544.png\" alt=\"image-20220729102140460\" style=\"zoom: 80%;\" />\n\n#### 内联样式(inline style)\n`<p style=\"color:sienna;margin-left:20px\">text</p>`\n\n<p style=\"color:sienna;margin-left:20px\">text</p>\n\n**Atten:<span style=\"background-color:#ADFF2F\">多重样式优先级</span>**\n内联>内部>外部>默认\n\n\n\n### 背景\n\n- background-color\n- background-image\n- background-repeat：水平或垂直方向平铺或不平铺(repeat-x/repeat-y/no-repeat)\n- background-attachment：是否固定/滚动\n- background-position：起始位置\n\n背景可简写属性，属性顺序如上顺序，属性可不全部使用。\n\n`body {background:#ffffff url('img_tree.png') no-repeat right top;}`\n\n\n\n### 对齐\n\n* 元素居中对齐\n\n使用`margin: auto`\n\n图片居中对其需放入块元素中\n\n\n\n* 文本居中对齐\n\n`text-align: center`\n\n\n\n* 左右对齐-定位\n\n`position:absolute`\n\n注释：绝对定位元素会被从正常流中删除，并且能够交叠元素。\n\n**Atten:** 当使用 **position** 来对齐元素时, 通常`<body>`元素会设置 **margin** 和 **padding** 。 这样可以避免在不同的浏览器中出现可见的差异。\n\n\n\n* 左右对齐-float\n\n`float:left/right`\n\n**Atten**：如果子元素的高度大于父元素，且子元素设置了浮动，那么子元素将溢出，这时候你可以使用 \"***clearfix***(清除浮动)\" 来解决该问题。可以在父元素上加`overflow:auto`来解决子元素溢出。\n\n\n\n* 垂直居中-padding\n\n```css\n.center {\n    padding: 70px 0;//水平居中\n    border: 3px solid green;\n    text-align: center;//垂直居中\n}\n```\n\n\n\n* 垂直居中-line-height\n\n```css\n.center {\n    line-height: 200px;\n    height: 200px;\n    border: 3px solid green;\n    text-align: center;\n}\n \n/* 如果文本有多行，添加以下代码: */\n.center p {\n    line-height: 1.5;\n    display: inline-block;\n    vertical-align: middle;\n}\n```\n\n\n\n* 垂直居中-position&transform\n\n```css\n.center { \n    height: 200px;\n    position: relative;\n    border: 3px solid green; \n}\n \n.center p {\n    margin: 0;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n```\n\n\n\n### 伪类(Pseudo-classes)&伪元素\n\n#### 伪类\n\n伪类语法：`selector:pseudo-class {property:value;}`\n\nCSS类使用伪类：`selector.class:pseudo-class {property:value;}`\n\n#### 伪元素\n\n语法：`selector:pseudo-element {property:value;}`\n\nCSS类使用伪元素：`selector.class:pseudo-element {property:value;}`\n\n\n\n<a href=\"https://www.runoob.com/css/css-tutorial.html\">其余相关内容请点击查看。</a>\n\n\n\n\n\n***\n\n\n\n\n\n## JavaScript\n\nJavaScript是一种脚本语言，控制了网页的行为，插入HTML页面后，由浏览器执行。\n\n浏览器逐行读取并执行代码(不是先全部编译再执行)。\n\n\n\n### 使用\n\n* 在HTML文件页中使用`<script>...</script>`标签。\n\n  Atten:一般放在head中或页面底部(body)\n\n* HTML文件可使用外部的.js文件，利用script标签的<span style=\"color:red\">src</span>属性\n\n  `<script src=\"myScript.js\">...</script>`\n\n使用时，为`事件=函数名()`.\n\n\n\n### 输出/显示数据\n\n* window.alert()弹出警告\n```html\n<script>\n\twindow.alert(2);\n\t</script>\n```\n\n* document.write()将内容写入HTML文档\n\n```html\n  <script>\n  document.write(\"11\");\n  </script>\n```\n\n\n  **Atten**:仅向文档输出写内容，<span style=\"background-color:#E0FFFF\">若在文档加载完成后执行，整个页面将被覆盖</span>。\n\n  <span style=\"background-color:#E0FFFF\">Example</span>\n\n```html\n\t<button onclick=\"test()\">test1</button>\n\t<script>\n\t document.write(\"document1\");\n\t \tfunction test(){\n\t \tdocument.write(\"refreshing\");\n\t \t}\n\t </script>\n```\n\n   result:<img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202207312149397.png\" alt=\"image-20220731212404112\" style=\"zoom:67%;\" />\n\n   After clicking the botton:<img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202207312150251.png\" alt=\"image-20220731213114137\" style=\"zoom:80%;\" />\n\n\n* innerHTML写入到HTML文档中\n\n```html\n   <script>\n   document.getElementById(\"id1\").innerHTML=\"new text\";\n   </script>\n```\n\n* console.log()写入到控制台\n\n```html\n   <script>\n   console.log(2);\n   </script>\n```\n\n   一般为利用浏览器进行调试。\n\n   \n\n### 语法\n\n#### 字面量(固定值)\n\n* 数字(Number)：整数/小数`3.14`\n\n* 字符串(String)：单引号/双引号`'text'`/`\"text\"`\n\n  * 可使用索引位置访问单个字符\n  * 字符串中可含引号，不能与字符串的相同/使用转义字符`\\'`or`\\\"`以使用引号\n  * 可使用.length计算长度\n  * 可使用new关键字将字符串定义为对象\n\n* 表达式：`1+1`\n\n* 数组(Array)：`[1,2,3]`/`['apple','orange']`\n\n* 对象(Object)：`{key1:\"value1\",key2:\"value2\"}`，可跨行定义\n\n  访问对象属性：\n\n  ```js\n  var person={\n      name:\"Lee\",\n      age:\"22\",\n      information:function(){\n      return \"name:\"+this.name+\" \"+\"age:\"+this.age;\n  }};\n  //access attributes1\n  person.name;\n  //access attributes2\n  person[\"name\"];\n  //access function\n  var infor=person.information();//without(),the strings of \"information\" will be displayed\n  ```\n\n  **Atten**:<span style=\"background-color:#FFFACD\">数组索引为数字，对象索引为名字(key/name)</span>\n\n* 函数(Function)：`function myFunction(){}`\n\n\n\n#### 数据类型\n\n<img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202207312329738.png\" alt=\"image-20220731232911606\" style=\"zoom: 67%;\" />\n\n\n\n#### 变量\n\n使用关键字<span style=\"color:red\">var</span>定义变量，`var a=1;`\n\n* 变量名使用驼峰命名法，大小写敏感。\n\n* 变量声明`var name;`,此时name的值为undefined\n\n* 重新声明变量，其值不会丢失\n\n* JS拥有动态类型，相同变量可作不同类型\n\n* const关键字定义常量，声明时初始化`const x=10;`，作用域与let相似\n\n  <mark>Atten</mark>：const定义的并不是严格意义上的常量，它定义了一个常量引用一个值。使用 const 定义的对象或者数组，其实是可变(<span style=\"color:red\">可修改/增加元素，不可重新赋值</span>)的。\n\n  ```js\n  const person={name:\"Lee\",age:\"22\"};//常量对象\n  person.name=\"Ham\";//修改属性\n  person.location=\"xxx\";//添加属性\n  //不可对常量对象重新赋值\n  //person={name:\"Ham\",age:\"22\"} //wrong\n  ```\n\n  可以使用Object.freeze()来冻结变量放置修改。\n\n##### 变量作用域\n\n* 函数体外声明的变量为全局变量，函数内声明的变量为局部变量(var)\n\n* <span style=\"color:green\">在块中声明var变量，其在块外依然可被访问</span>\n\n  <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202207312223668.png\" alt=\"image-20220731222319625\" style=\"zoom: 80%;\" />\n\n* 使用<span style=\"background-color:#B4EEB4\">let</span>关键字可实现只在块内有效\n\n  <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202207312225564.png\" alt=\"image-20220731222514523\" style=\"zoom:80%;\" />\n\n* 重新定义变量\n\n  * var：可在任意地方修改,<img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202207312231711.png\" alt=\"image-20220731223151672\" style=\"zoom:67%;\" />\n  * let：<img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202207312231209.png\" alt=\"image-20220731223135155\" style=\"zoom:67%;\" />\n  * 相同作用域/块级作用域中，不能用let关键字重置var/let声明的变量\n  * 相同作用域/块级作用域中，不能用 var关键字重置let声明的变量\n  * 相同作用域/块级作用域中，不能用 const关键字重置var/let/const声明的变量\n\n* 使用var声明的全局变量<span style=\"background-color:#FFC1C1\">属于window对象</span>.\n\n* 使用let声明的全局变量<span style=\"background-color:#FFC1C1\">不属于window对象</span>.\n\n* <b><span style=\"color: #FF8247\">var变量可以先使用再声明</span>(作为全局变量，可删除,<span style=\"background-color:#4682B4;color:white\">严格模式下不允许</span>)，let变量必须声明才能使用。</b>\n\n  * 严格模式(use strict)\n\n    >在脚本或函数头部添加`\"use strict\";`表达式来声明\n    >\n    >* 不允许使用未声明变量\n    >\n    >* 不允许删除变量或对象\n    >\n    >* 不允许删除函数\n    >\n    >* 不允许变量重名\n    >\n    >* 不允许使用八进制\n    >\n    >* 不允许使用转义字符`\\`\n    >\n    >* 不允许对只读属性赋值(writable:false)\n    >\n    >* 不允许对使用getter方法读取的属性赋值\n    >\n    >  ```js\n    >  \"use strict\";\n    >  var obj = {get x() {return 0} };\n    >  \n    >  obj.x = 3.14;            // 报错\n    >  ```\n    >\n    >* 不允许删除不允许删除的属性\n    >\n    >* 变量名不能使用`\"eval\"/\"arguments\"`字符串\n    >\n    >* 不允许使用如下语句\n    >\n    >  ```js\n    >  \"use strict\";\n    >  with (Math){x = cos(2)}; // 报错\n    >  ```\n    >\n    >* 由于一些安全原因，在作用域 eval() 创建的变量不能被调用\n    >\n    >  ```js\n    >  \"use strict\";\n    >  eval (\"var x = 2\");\n    >  alert (x);               // 报错\n    >  ```\n    >\n    >* 禁止this关键字指向全局对象：严格模式下this为undefined\n    >\n    >函数内部使用作用域为函数内部\n\n\n\n##### 程序块作用域\n\n在每个代码块中 JavaScript 不会创建一个新的作用域，一般各个代码块的作用域都是全局的。\n\n  ```js\nfor (var i = 0; i < 10; i++) {\n    // some code\n}\nreturn i;//i=10, not undefined\n  ```\n\n \n\n##### 声明提升\n\n> * 函数及变量的<span style=\"background-color:#EEE0E5\">声明都将被提升到函数的最顶部</span>，即声明位于任意位置都等同与在函数顶部\n> * <span style=\"background-color:#E0EEE0\">初始化不会提升</span>，即初始化后位置确定\n> * 一般在每个作用域前声明所有变量\n\n\n\n\n\n#### 语句\n\n* 语句自动忽略多余空格\n\n* 语句以，分隔\n\n* 可在文本字符串中使用反斜杠对代码换行\n\n  ```js\n  document.write(\"hello\\\n  world!\");\n  ```\n\n* 注释为`//`与`/*...*/`\n\n* return语句自动看作加分号的语句（代码结束[默认为最后一句]）\n\n##### 比较运算符\n\n![image-20220731231259574](https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202207312312796.png)\n\n* 普通比较\"=\\=\"忽略数据类型，严格比较\"===\"同时检查值与类型\n* switch语句中case的比较为严格比较(===)\n\n\n\n##### For/In循环\n\n遍历对象属性\n\n  ```js\nvar infor;\nvar person={name:\"Ham\",age:22};\nfor(x in person){//x为属性名\n    infor=person[x]+\" \";\n}\n//infor=Ham 22 ;\n  ```\n\n\n\n##### Typeof/null/undefined\n\n* typeof可用于检测变量的数据类型，`typeof  'Ham'`/`typeof 3.14\t`\n\n* NaN的数据类型为number\n\n* Atten:数组时对象的特殊类型，所以`typeof Array/Date`返回对象\n\n  * constructor属性返回所有JS变量的<mark>构造函数</mark>\n\n  * 通过constructor判断类型：检验返回值是否包含相应字符串\n\n\n  ```js\nfunction isArray(arr){\n    return arr.constructor.toString().indexOf(\"Array\")>-1;\n}\n  ```\n\n\n\n\n* null 表示空对象引用，`typeof null`返回对象\n\n* 可以利用null来清空对象\n\n* undefined表示未设置值的变量，`typeof 未设置值的变量`返回undefined\n\n* 可以利用undefined来清空变量\n\n* <span style=\"color:orange\"> null== undefined //true</span>\n\n  <span style=\"color:orange\">  null===undefined //false </span>\n\n\n\n##### 类型转换\n\n* 数字->字符串\n\n  * String(number) `String(123)`\n  * Number.toString() `(123).toString()`\n\n* 布尔值->字符串\n\n  * String(false)\n  * false.toString()\n  * <a href=\"https://www.runoob.com/jsref/jsref-obj-number.html\">更多请参考</a>\n\n* 日期->字符串\n\n  * String(new Date())\n  * Date.toString() `obj.toString()`\n  * <a href=\"https://www.runoob.com/jsref/jsref-obj-date.html\">更多请参考</a>\n\n* 字符串->数字\n\n  * Number(\"3.00\")//3.00\n\n    Number(\"isd\")//NaN：非数字值\n\n  * parseFloat()\n\n  * parseInt()\n\n* 一元运算符+：将变量转换为数字\n\n\n  ````js\n  var a=\"1\";\n  var b+=a;//b是一个数字1\n  var c=\"hdai\";\n  var d+=c;//d为数字，值为NaN\n  ````\n\n\n\n\n* 日期->数字\n\n  * Number(new Date())\n  * Date.getTime()\n\n* 自动转换\n\n  <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202207312347452.png\" alt=\"image-20220731234708405\" style=\"zoom:80%;\" />\n\n* 自动转换为字符串\n\n  尝试输出一个对象或一个变量时 JavaScript 会自动调用变量的 toString() 方法\n\n<a href=\"https://www.runoob.com/js/js-type-conversion.html\">更多请查看</a>\n\n\n\n### 正则表达式(Regular Expression/regex/regexp/RE)\n\n* 正则表达式是由一个字符序列形成的搜索模式。\n\n* 当你在文本中搜索数据时，你可以用搜索模式来描述你要查询的内容。\n\n* 正则表达式可以是一个简单的字符，或一个更复杂的模式。\n\n* 正则表达式可用于所有文本搜索和文本替换的操作。\n\n#### 语法\n\n`/正则表达式主体/修饰符(可选)`\n\n主体用于检索，不区分大小写\n\n* 修饰符\n  * i： 执行对大小写不敏感的匹配。\n  * g：执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。\n  * m：执行多行匹配。\n\n#### 使用字符串方法\n\n* search()\n\n  检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串，并返回子串的起始位置。可使用字符串作参数（自动转化为正则表达式）。\n\n\n  ```js\n  var str=\"HelloWorld\";\n  var n=str.search(/World/i);//n=5\n  var m=str.search(\"World\");//字符串参数自动转化为正则表达式,m=5\n  ```\n\n\n\n* replace()\n\n  使用正则表达式且不区分大小写将字符串中的A替换为B，可使用字符串作参数\n\n\n  ```js\n  var str=\"HelloWorld\";\n  var text=str.replace(/world/i,\"JS\");//text=\"HelloJS\"\n  var text1=str.replace(\"World\",\"JS\");\n  ```\n\n\n\n#### 正则表达式模式\n\n* 方括号用于查找某个范围内的字符\n\n  <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202208010007126.png\" alt=\"image-20220801000731016\" style=\"zoom:90%;\" />\n\n* 元字符拥有特殊含义\n\n  <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202208010008921.png\" alt=\"image-20220801000804874\" style=\"zoom:80%;\" />\n\n* 量词\n\n  <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202208010008243.png\" alt=\"image-20220801000823200\" style=\"zoom:90%;\" />\n\n\n\n#### RegExp对象\n\n一个预定义了属性和方法的正则表达式对象。\n\n##### test()\n\n用于检测一个字符串是否匹配某个模式，如果字符串中含有匹配的文本，则返回 true，否则返回 false。\n\n\n  ``` js\n/e/.test(\"hello\");//true\n  ```\n\n##### exec()\n\n用于检索字符串中的正则表达式的匹配。该函数返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。\n\n  ```js\n/e/.exec(\"hello\");//输出e\n  ```\n\n\n\n<a href=\"https://www.runoob.com/jsref/jsref-obj-regexp.html\">更多有关RegExp请参考</a>\n\n\n\n### 错误处理：throw, try, catch\n\n  ```js\ntry{\n    ...//exception\n    //can throw exception  defined by the author\n   throw exception //exception can be string/number/logical value/object\n}catch(err){\n    ...//catch exception and handle\n}finally{\n    ...//execute all the time\n}\n  ```\n\n\n\n### 调试\n\n断点/debugger关键字：停止执行JS代码，调用调试函数\n\n\n\n### 验证API\n\n#### 约束验证DOM（Document Object Model）方法\n\n* checkValidity()：如果 input 元素中的数据是合法的返回 true，否则返回 false\n\n  ```html\n  <input id=\"id1\" type=\"number\" min=\"100\" max=\"300\" required>\n  <button onclick=\"myFunction()\">验证</button>\n   \n  <p id=\"demo\"></p>\n   \n  <script>\n  function myFunction() {\n      var inpObj = document.getElementById(\"id1\");\n      if (inpObj.checkValidity() == false) {//输入值不在100~300之间\n          document.getElementById(\"demo\").innerHTML = inpObj.validationMessage;\n      }\n  }\n  </script>\n  ```\n\n  \n\n* setCustomValidity()：设置 input 元素的 validationMessage 属性，用于自定义错误提示信息的方法。\n\n  使用 setCustomValidity 设置了自定义提示后，validity.customError 就会变成 true，checkValidity 总是会返回 false。如果要重新判断需要取消自定义提示，方式如下：\n\n  ```js\n  //使用前取消自定义提示方式，否则下次checkValidity总是false\n  setCustomValidity('')\n  setCustomValidity(null) \n  setCustomValidity(undefined)\n  ...//check and set...\n  ```\n\n\n\n#### 约束验证DOM属性\n\n* validity：布尔属性值，返回 input 输入值是否合法\n\n  <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202208011500025.png\" alt=\"image-20220801150057861\" style=\"zoom:67%;\" align=\"left\" />\n\n  \n\n* validationMessage：浏览器错误提示信息\n\n* willValidate：指定 input 是否需要验证\n\n\n\n\n\n### JSON\n\nJSON(JavaScript Object Notation)，使用JS语法，但是独立于语言，JSON是轻量级的文本数据交换格式。\n\n\n\n#### 语法规则\n\n> * 数据为键值对(`\"key\":value`)，key必须是字符串，必须在双引号中\n>\n>   > 访问对象值\n>   >\n>   > * obj.key\n>   > * obj[\"key\"]\n>\n> * 数据由`,`分隔\n>\n> * 大括号`{}`保存对象，方括号`[]`保存数组\n\n\n\n#### JSON字符串转换为JS对象\n\n使用<mark>JSON.parse(**text**,reviver)</mark>将接受的数据(字符串)转化为JS对象\n\n* text：必需，一个有效的JSON字符串\n* reviver：可选，一个转换结果的函数， 将为对象的每个成员调用此函数。\n* <a href=\"https://c.runoob.com/front-end/53/\">检验JSON格式是否合法</a>\n\n\n\n##### Atten\n\n1. JSON不能存储Date对象，如果需要存储 Date 对象，需要将其转换为字符串。之后再将字符串转换为 Date 对象。\n\n ```js\nvar text = '{ \"name\":\"Google\", \"initDate\":\"2011-11-11\", \"site\":\"www.google.com\"}';\nvar obj = JSON.parse(text);\nobj.initDate = new Date(obj.initDate);\n ```\n\n​       可以使用reviver参数，一个转换结果的函数，对象的每个成员调用此函数。\n\n ```js\nvar text = '{ \"name\":\"Google\", \"initDate\":\"2011-11-11\", \"site\":\"www.google.com\"}';\nvar obj = JSON.parse(text, function (key, value) {\n    if (key == \"initDate\") {\n        return new Date(value);\n    } else {\n        return value;\n}});\n ```\n\n2. JSON 不允许包含函数，但以将函数作为字符串存储，之后再将字符串转换为函数。\n\n   不建议使用函数\n\n\n\n#### JS对象转换为字符串\n\n使用<mark>JSON.stringify(**value**,replacer,space)</mark>将 JavaScript 对象转换为字符串。\n\n* value:必须， 要转换的 JavaScript 值（通常为对象或数组）。\n\n* replacer:可选。用于转换结果的函数或数组。\n\n  如果 replacer 为函数，则 JSON.stringify 将调用该函数，并传入每个成员的键和值。使用返回值而不是原始值。如果此函数返回 undefined，则排除成员。根对象的键是一个空字符串：\"\"。\n\n  如果 replacer 是一个数组，则仅转换该数组中具有键值的成员。成员的转换顺序与键在数组中的顺序一样。当 value 参数也为数组时，将忽略 replacer 数组。\n\n* space:可选，文本添加缩进、空格和换行符，如果 space 是一个数字，则返回值文本在每个级别缩进指定数目的空格，如果 space 大于 10，则文本缩进 10 个空格。space 也可以使用非数字，如：\\t。\n\n\n\n##### Atten\n\n1. JSON 不能存储 Date 对象。JSON.stringify() 会将所有日期转换为字符串。\n2. JSON 不允许包含函数，JSON.stringify() 会删除 JavaScript 对象的函数，包括 key 和 value。\n\n\n\n\n\n### javascript:void(0) \n\nvoid:指定要计算一个表达式但是不返回值。\n\n> void func()\n>\n> javascript: void func()\n\n> void(func())\n>\n> javasript: void(func())\n\n```html\n<a href=\"javascript:void(0)\">单击此处什么也不会发生</a>\n```\n\n<a href=\"javascript:void(0)\">单击此处什么也不会发生</a>\n\n\n\n```html\n<p>点击以下链接查看结果：</p>\n<a href=\"javascript:void(alert('Warning!!!'))\">点我!</a>\n```\n\n<p>点击以下链接查看结果：</p> <a href=\"javascript:void(alert('Warning!!!'))\">点我!</a>\n\n\n\n#### href=\"#\"与href=\"javascript:void(0)\"的区别\n\n**#** 包含了一个位置信息，默认的锚是**#top** 也就是网页的上端。\n\n而javascript:void(0), 仅仅表示一个死链接。\n\n在页面很长的时候会使用 **#** 来定位页面的具体位置，格式为：**# + id**。\n\n如果你要定义一个死链接请使用 javascript:void(0) 。\n\n```html\n<a href=\"javascript:void(0);\">点我没有反应的!</a>\n<a href=\"#pos\">点我定位到指定位置!</a>\n<br>\n...\n<br>\n<p id=\"pos\">尾部定位点</p>\n```\n\n<a href=\"javascript:void(0);\">点我没有反应的!</a> <a href=\"#pos\">点我定位到指定位置!</a> <br> ... <br> <p id=\"pos\">尾部定位点</p>\n\n\n\n<a herg=\"https://www.runoob.com/js\">更多JavaScript内容可参考</a>\n\n\n\n## ES6\n\nES6(ECMAScript 6.0)为js的一种标准\n\n* Babel转码器可以将ES6代码转为ES6\n\n  Babel的配置文件<span style=\"color:red\">.babelrc</span>存放在项目的根目录，使用前需先配置\n\n  ```\n  {\n  \"presets\": [//设定转码规则\n   \"@babel/env\",\n   \"@babel/preset-react\"\n  ],\n  \"plugins\": []\n  }\n  ```\n\n* 命令行转码\n\n  ```\n  # 转码结果输出到标准输出\n  $ npx babel example.js\n  \n  # 转码结果写入一个文件\n  # --out-file 或 -o 参数指定输出文件\n  $ npx babel example.js --out-file compiled.js\n  # 或者\n  $ npx babel example.js -o compiled.js\n  \n  # 整个目录转码\n  # --out-dir 或 -d 参数指定输出目录\n  $ npx babel src --out-dir lib\n  # 或者\n  $ npx babel src -d lib\n  \n  # -s 参数生成source map文件\n  $ npx babel src -d lib -s\n  ```\n\n* babel-node 支持直接运行ES6代码\n\n","tags":["studying","front-end","coding"],"categories":["Learning","front-end"]},{"title":"不同年纪对应的音乐喜爱度变化","url":"/post/7b89dc1f.html","content":"\n\n\n随着年纪的增加，对不同音乐的喜好程度有了很大变化。\n\n <!-- more -->\n\n## 听歌软件的使用\n\n  最开始用的是咪咕音乐，后面开始用酷我音乐，然后开始用酷狗音乐，过渡到QQ音乐，网易云音乐，Apple Music以及现在用得较多的Spotify。\n\n\n\n## 小学期间\n\n  应该算是到了五年纪才有了自己找歌听的意识，在此之前都是被动地接受别人所放的歌曲。自己找歌听听得最多的是什么呢？徐良、许嵩、汪苏泷，也就是现在的所谓的童年”三巨头“。三人比较的话听得最多的应该是徐良，当时非常痴迷他和孙雨幽的合唱。\n\n《情话》这张专的好多歌我都还会唱，前段时间宿舍放歌放童年回忆歌曲，放到他们的歌我还能完整唱出来，不得不说确实算是刻在了我的脑子中。\n\n  其二就是许嵩，听许嵩其实应该算是受到一个发小的影响，当时没有什么自己找歌听的概念，一般是看到别人做什么就开始跟着听，但是好像几乎全是有关感情的歌，为什么小学生喜欢听这个？\n\n  汪苏泷其实好像就听了一两首，记忆最深的是小星星，现在也还会唱。\n\n  因为当时比较喜欢宋茜还听了挺多fx的歌来着，现在连歌名是什么都忘记了。\n\n\n\n## 初中\n\n  刚进入初中最开始其实还是保留小学的审美，后面因为主流审美的变化以及接触到了不同的同学才开始有所变化。\n\n  受湖南卫视我是歌手的影响，其实听到了很多算还不错的歌，刚刚去重新登录了酷我的账号，发现列表里几乎都是我是歌手里的歌以及一些电影主题曲。\n\n  受身边好朋友以及当时主流追星的影响，听了当时的TFBOYS的几乎全部歌曲，后面开始追韩国男团女团，听了当时的BTS以及GOT7的很多歌，也听了几首Bigbang的，现在几乎全忘了。\n\n  受身边一个朋友的影响开始听英文歌曲，听的第一个歌手应该是Taylor Swift，因为当时朋友很喜欢她。后面比较喜欢欧美音乐，开始了自己探索，大量听欧美歌曲，听b榜的歌曲，当时非常喜欢断眉，那个时期他发行的所有单曲都会唱。也很喜欢霉霉，不过好像只听了部分，最喜欢的是1989这张专，还记得当时QQ音乐这张专要付费，我还买了。\n\n\n\n## 高中\n\n  高中其实是初中的延续以及自己探索的延续。保留了听欧美的耳朵，不断听欧美流行歌曲，逐渐从断眉转变到喜欢萌德(Shawn Mendes)，后面觉得他从阳光大男孩转变到油腻大叔了以及出的专奇奇怪怪就放弃了(说的就是你senorita).但是还是一直在听欧美流行。\n\n  逐渐找到自己喜欢的歌曲的样子，开始听country music以及一些杂七杂八不同语言的歌曲。\n\n  过渡到后面非常喜欢看歌舞相关电影，开始听电影插曲，列表几乎全是pitch perfect 1-3以及High School Musical 1-3(歌舞青春)相关歌曲。偶尔穿插一切华语歌曲。\n\n  找到自己喜欢的电影的类型——歌舞剧，从现在来看也就是musical的电影拍摄版，开始大量看电影以及听里面的曲子，Moulin Rouge(红磨坊)，The Greatest Showman(马戏之王)，以及其他很有名的音乐剧的电影出品版。\n\n  一般而言是电影带动了我的曲库，有几个相反的算是：\n\n1. Try - Asher Monroe，真的太好听，因为这首歌去看的Fame\n2. Way back into love - Haley Bennett&Hugh Grant，非常非常喜欢电影demo版，真的很甜，所以去看了Music and Lyrics(K歌情人)\n\n  真的非常感谢声入人心这个节目，真的明白与找到了心中所爱，开始真正看音乐剧，第一部剧应该是Rent，其实应该也是Seasons of love吸引我去看的这部剧，真的入股不亏！\n\n\n\n## 大学\n\n  延续了高中的音乐剧，时间、资源充足所以较大量看剧，歌单几乎全是宽街原声。\n\n  大一考试周狠狠emo开始听五月天，也开始从网易云过渡到QQ音乐和Spotify，直到现在。\n\n\n\n## Some thoughts\n\n* 音乐真的是很私人的东西，每个人的口味都不太相同，献上我给朋友推荐音乐剧的图。\n\n  <img src=\"https://raw.githubusercontent.com/Mooyi646/ImageSaver/main/202207271017461.jpg\" alt=\"img\" style=\"zoom: 50%;\" />\n\n* 所有音乐都不分高低贵贱，自己喜欢即可。\n\n* 音乐口味的变化真的很神奇，现在去听我高一的歌单，我甚至会生出”我当时怎么去听这首歌并把它加入我的歌单“的想法。\n\n\n\n希望所有人都能找到自己喜欢的音乐！;-)","tags":["thoughts","Music"],"categories":["Let's think","Music"]},{"title":"关于拖延以及失去动力","url":"/post/72693323.html","content":"\n  这是从大二上一直到这学期期末周末尾都给自己定下的目标，没有想过现在才实现，也没有想过现在居然实现了。\n\n <!-- more -->\n\n  上大学以来一直都是行动力底下。高中的自己还能夸夸自己说“我觉得我的自制力还算不错啊”，到大学过后，从不敢说出这话了。\n\n  两年了，说什么事情也没做成的话，倒也是给自己的人生转了个弯。从工商管理大类到了如今的软工，你说没付出努力，别人说你骗谁呢，说我真的努力了啊，我说这是骗自己啊。\n\n  经常会想到底是什么让我失去了动力，亦或者说是向上的精神与对等的行动。我不知道。高中真的算是过得最快乐的三年的吧，中考的幸运延续，使得高中初始就算站在了还不错的起点，然后一直保持，偶尔徘徊，偶尔向上，总体都还算不错，为什么大学就截然不同了呢？或许是我没有从一开始就在相对的高处吧，我又怎么能够站得到高处呢？\n\n  总归是絮絮叨叨，实力与行动配不上自己的“野心”，确实是“卷也卷不赢，摆也不敢摆”。","tags":["thoughts","doer","procrastination"],"categories":["Let's think","Life"]}]